// <auto-generated />
using System;
using BasicShopDemo.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BasicShopDemo.Api.Migrations
{
    [DbContext(typeof(BasicShopContext))]
    [Migration("20191228211855_Providers")]
    partial class Providers
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BasicShopDemo.Api.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("UI_CategoryCode");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UI_CategoryName");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("BasicShopDemo.Api.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("Code")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("VARCHAR(70)")
                        .HasMaxLength(70);

                    b.Property<decimal>("Price")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("DECIMAL(6,2)")
                        .HasDefaultValue(0.05m);

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId")
                        .HasName("IX_ProductCategory");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasName("UI_ProductCode");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("UI_ProductName");

                    b.HasIndex("Price")
                        .HasName("IX_ProductPrice");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BasicShopDemo.Api.Models.Provider", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasMaxLength(100);

                    b.Property<string>("BusinessName")
                        .IsRequired()
                        .HasColumnType("VARCHAR(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CellPhone")
                        .HasColumnType("VARCHAR(10)")
                        .HasMaxLength(10);

                    b.Property<string>("Email")
                        .HasColumnType("VARCHAR(50)")
                        .HasMaxLength(50);

                    b.Property<string>("Phone")
                        .HasColumnType("VARCHAR(20)")
                        .HasMaxLength(20);

                    b.Property<string>("RUC")
                        .IsRequired()
                        .HasColumnType("VARCHAR(13)");

                    b.Property<bool?>("Status")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("WebSite")
                        .HasColumnType("VARCHAR(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.HasIndex("BusinessName")
                        .IsUnique()
                        .HasName("UI_ProviderBusinessName");

                    b.HasIndex("CellPhone")
                        .IsUnique()
                        .HasName("UI_ProviderCellPhone")
                        .HasFilter("([CellPhone] IS NOT NULL)");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("UI_ProviderEmail")
                        .HasFilter("([Email] IS NOT NULL)");

                    b.HasIndex("Phone")
                        .IsUnique()
                        .HasName("UI_ProviderPhone")
                        .HasFilter("([Phone] IS NOT NULL)");

                    b.HasIndex("RUC")
                        .IsUnique()
                        .HasName("UI_ProviderRUC");

                    b.HasIndex("WebSite")
                        .IsUnique()
                        .HasName("UI_ProviderWebSite")
                        .HasFilter("([WebSite] IS NOT NULL)");

                    b.ToTable("Providers");
                });

            modelBuilder.Entity("BasicShopDemo.Api.Models.ProviderCategory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("ProviderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ProviderId", "CategoryId")
                        .IsUnique()
                        .HasName("UI_ProviderCategory");

                    b.ToTable("ProvidersCategories");
                });

            modelBuilder.Entity("BasicShopDemo.Api.Models.Product", b =>
                {
                    b.HasOne("BasicShopDemo.Api.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK_Products_CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("BasicShopDemo.Api.Models.ProviderCategory", b =>
                {
                    b.HasOne("BasicShopDemo.Api.Models.Category", "Category")
                        .WithMany("ProvidersCategory")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BasicShopDemo.Api.Models.Provider", "Provider")
                        .WithMany("ProviderCategories")
                        .HasForeignKey("ProviderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
